# MAIN CONFIGURATION FILE
#
# Each pair of lines on this file is a key-value pair that will be stored on
# the global config dictionary. See lib/config.h for more information on how to
# use this module.


################################################################
# General congfiguration
################################################################

# points to a directory (sans trailing slash) where sprites for printable ASCII
# characters should be stored with their ASCII code as their filename: code.png

general.font_path
assets/img/pixeled

general.initial_game_state
assets/initial_game_state.txt

# the ascii code for the key to press when multiple messages are to be
# displayed at once
general.next_message_key
78 # n



################################################################
# Asset DBs files
################################################################

asset_dbs.resources
assets/resources.txt

asset_dbs.tiles
assets/tiles.txt

asset_dbs.buildings
assets/new-buildings.txt

asset_dbs.sprites
assets/sprites.txt

asset_dbs.events
assets/events.txt



################################################################
# Attack minigame configuration
################################################################

attack_minigame.enemy_sprite
assets/img/enemies.png

attack_minigame.player_sprite
assets/img/resource_7.png

# a higher number means a lower speed
# hint: 50000 works well
attack_minigame.enemy_speed
50000

attack_minigame.soldier_resource
6

attack_minigame.speed_resource
4

################################################################
# Other stuff that's left to organize
################################################################
sprite dir
assets/img/

audio dir
assets/audio/

hex_xlen
64

hex_ylen
22

hex_init_x
11

hex_init_y
3

tiles_per_double_column # This must be a multiple of 4
12

map height
10

max_townhalls
1

map columns # This must be of the form columns_in_screen + 2*n, in this case 7+2*n
11

# The initial cursor must belong to an ODD column between ceil(columns_in_screen/2)
# and (map columns - ceil(columns_in_screen/2)).
#
# To check if this is true, calculate floor(initial cursor / map height). This
# value will be the column number and must be odd.
#
# Also, check inital cursor % map height, this must be a number between tiles_per_double_column/4 + 1
# and map height - (tiles_per_double_column/4 + 1).
#
# TODO: THESE SHOULD BE TESTED AT THE BEGINNING OF THE GAME.
initial cursor
55

columns_in_screen #This must be an odd number
7

screen_width
640

screen_height
180
